<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
 
<bean id="uniqueJobIdentifier" class="org.springframework.scheduling.quartz.JobDetailBean">
      <!-- Es necesario indicar la clase que contienen tu tarea -->
      <property name="jobClass" value="mx.argal.cp.web.util.AlertasJob" />
      <!-- También indicaremos aquellos servicios que se usarán en la tarea, en caso de que se requiera de alguno, para que Spring los incluya en el contexto -->
      <property name="jobDataAsMap">
            <map>
                  <entry key ="alertasServicio" value-ref="alertasServicioImpl"/>                  
            </map>
      </property>
</bean>

<bean id="uniqueTriggerIdentifier" class="org.springframework.scheduling.quartz.CronTriggerBean">
      <!-- Un trigger se asocia a un job mediante su identificador único -->
      <property name="jobDetail" ref="uniqueJobIdentifier"/>
      <!-- Existen varias posibilidades en este punto. Nosotros trabajamos con expresiones cron definidas en un fichero properties para usar diferentes configuraciones según el entorno de ejecución -->
      <property name="cronExpression" value="0 0/15 * * * ?" />
      <!--  property name="cronExpression" value="0 0 20 1/1 * ? *" /-->
      
</bean>

<bean id="schedulerFactory" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
      <property name="jobDetails">
            <!-- En esta lista añadiremos todos los jobs definidos previamente -->
            <list>                  
                  <ref bean="uniqueJobIdentifier"/>
            </list>
      </property>
      <property name="triggers">
            <!-- En esta lista añadiremos todos los triggers definidos previamente -->
            <list>
                  <ref bean="uniqueTriggerIdentifier"/>
            </list>
      </property>
</bean>
 
</beans>